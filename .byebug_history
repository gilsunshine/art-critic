c
<<<<<<< HEAD
params
c
@comments
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
comment_params
c
self.id
@artwork
c
    @thread
        format.js
        format.html { redirect_to @thread }
respond_to do |format|
security_transgression_unless @comment.can_be_created_by?(@user)
@comment.creator = @user
@comment.thread = @thread
@comment = Comment.new
params
c
@user
c
@artwork.tags.find(1)
@artwork.tags.find_by(category: :year)
@artwork.tags.find_buy(category: :year)
@artwork.tags
@artwork
@artwrok
c
@artwork.name
@artwork
@artwork.year
@artwork.tags
c
@tags.find{|tag| tag.category == "year"}
c
self.id
self
ArtworkTag.first
@artwork_tags
c
@artwork_tags
c
tag
c
      endc
        end
          @tags << tag
        if tag.id == artwork_tag.tag
@artwork_tags.each do |artwork_tag|
tag
c
ArtworkTag.find_by(artwork_id: self.id)
@artwork_tags
c
params
c
 @tags.find{|tag| tag.category == "year"}
c
=======
params[:artwork][:tag_ids].reject { |c| c.empty? }.each {|id| puts id.to_i}
params[:artwork][:tag_ids].reject { |c| c.empty? }
params[:artwork][:tag_ids]
params[:tag_ids]
params[:tag_id]
params[:artwork]
params
c
@artwork.year.name
@artwork.year
@artwork_tag
c
@artwork.year
@artwork_tag
@tag
c
params[:artwork][:year]
params[:year]
@tag
params
c
>>>>>>> 306d5f287d312ea00d6fb30896821cf429dafdfb
@artwork
@artwork.users
@artwork.user
@artwork.errors.full_messages
@artwork.save
    @artwork.user_id = session[:user_id]
@artwork = Artwork.new(artwork_params)
session[:user_id]
params
c
params
c
@user
@user = User.find_by(username: params[:username])
params[:password]
params
c
c\
@user = User.where(username: params[:username])
params
c
    @user = User.find_by(username: params[:username])
params
c
params
c
User.find_by(params[:username])
User.find_by(params[:username]
params[:username]
@user = User.find_by(username: params[:username])
params
@user
c
  @user = User.find_by(username: params[:username])
@user.authenticate(params[:password])
params[:password]
c
params
c
@user.authenticate(params[:password])
@user = User.find_by(username: params[:username])
params
